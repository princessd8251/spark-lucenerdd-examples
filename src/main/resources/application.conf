lucenerdd {

  // Name of analyzer as it is under Lucene's package org.apache.lucene.analysis.XX
  analyzer.name = "en"

  // Analyzer name must be "ngram"
  analyzer {
    ngram.mingram = 2
    ngram.maxgram = 5
  }

  // Similarity scoring for Lucenes
  similarity.name = "bm25" // anything else will default to Lucene classic similarity


  index {

    // Lucene index storage
    // Use 'disk' to store the index in Java's temp directory
    // Otherwise the index will be stored in memory
    store.mode = "memory"

    stringfields{

      // Analyze text fields or not
      analyzed = true

      // Text fields options as in org.apache.lucene.index.IndexOptions
      //
      // Other options are:
      // "DOCS"
      // "DOCS_AND_FREQS"
      // "DOCS_AND_FREQS_AND_POSITIONS"
      // "DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS"
      // "NONE"
      options = "docs_and_freqs_and_positions_and_offsets"

      // Omit terms norms
      terms.omitnorms = false

      // Store term positions
      terms.positions = false

      // Store Term vectors (set true, otherwise LuceneRDD.termVectors(fieldName) will fail)
      terms.vectors = true
    }
  }

  // Maximum value on topK queries
  query.topk.maxvalue = 100
  // Default value of number of returned results
  query.topk.default = 10

  // Default value of number of faceted results
  query.facets.number.default = 10

  // Spatial related configurations used by ShapeLuceneRDD
  spatial {
    prefixtree {
      name = "quad"  // "geohash" or "quad"
      maxlevel = 7 // 11 results in sub-meter precision for geohash
      maxDistErr = 5.0 // in kilometers
    }

    // Shape format can be one of ShapeIO.GeoJSON, ShapeIO.LEGACY, ShapeIO.POLY, ShapeIO.WKT
    shape.io.format = "WKT"

  }
}
